#ifndef ERROR_H_
#define ERROR_H_

#include <string>
#include "cobra/token/token.h"

namespace Cobra {
	namespace internal{
	namespace Error {
		enum ERROR {
			INVALID_MODE,
			EXPECTED,
			EXPECTED_MODE,
			MODE_UNKNOWN,
			EXPECTED_VARIABLE_TYPE,
			INVALID_STMT,
			VAR_NOT_ALLOWED_IN_STRICT_MODE,
			EXPECTED_VAR,
			EXPECTED_OPERATOR,
			INVALID_FUNCTION_CALL,
			MISSING_EXPR,
			INVALID_EXPR,
			INVALID_LEFT_EXPR,
			UNDEFINED_VARIABLE,
			UNDEFINED_FUNC,
			UNDEFINED,
			INVALID_OBJECT_MEMBER,
			SCANNER,
			INVALID_CHAR_VALUE,
			EXPECTED_PARAMETER,
			UNEXPECTED_RETURN,
			EXPECTED_ARG_NAME,
			MISSING_FUNC_BODY,
			INTERNAL_SCOPE_ERROR,
			INVALID_ARGUMENT_TYPE,
			CANT_HAVE_NULL_FUNC_ARG,
			CANNOT_CONCAT_TYPE,
			CANNOT_SUBTRACT,
			CANNOT_MINUS_UNLIKE_VALUES,
			CANNOT_ADD_UNLIKE_VALUES,
			PARSE_VAR_ERR,
			UNKNOWN_CAST_TYPE,
			UNIDENTIFIED_OBJECT_MEMBER,
			INVALID_FUNC_CALL,
			UNDEFINED_OBJECT,
			UNABLE_TO_ACCESS_PRIVATE_MEMBER,
			DIFFERENT_TYPE_ALREADY_DEFINED_IN_SCOPE,
			COMPILATION_ERROR,
			MULTIPLE_DECL_OF_OBJECT
		};

		std::string String(ERROR e, Token* tok);
	}
} // namespace internal{
}

#endif // ERROR_H_
